@page "/"


@using BlinkNet.Data
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<MensagemContext> DbFactory
@inject NavigationManager Navigation
@inject IJSRuntime js


<input id="txtMensagem" type="text" @bind="novaMensagem" @onkeypress="OnKeyPress"/>
<button id="btnEnviar" @onclick="EnviarMensagem">Enviar</button>

<ul>
	@foreach (var mensagem in mensagens)
	{
		<li>@mensagem</li>
	}
</ul>

@code{
	private List<string> mensagens = new List<string>();
	private string novaMensagem = "";

	private HubConnection hubConnection;

	protected override async Task OnInitializedAsync()
	{
		using var context = DbFactory.CreateDbContext();

		if (context.ChatMensagens is not null)
		{
			var chatMensagem = await context.ChatMensagens.AsQueryable().ToListAsync();
		}

		hubConnection = new HubConnectionBuilder()
		.WithUrl(Navigation.ToAbsoluteUri("/chathub"))
		.Build();

		hubConnection.On<string>("ReceberMensagem", async (mensagem) =>
		{
			mensagens.Add(mensagem);
			await InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}




	private async Task EnviarMensagem()
	{
		if(novaMensagem is not null)
		{
			await hubConnection.SendAsync("EnviarMensagem", novaMensagem);
			novaMensagem = "";
		}

		await Focus("txtMensagem");
	}

	private async Task Focus(string elementId)
	{
		await js.InvokeVoidAsync("focusById", elementId);
	}

	private async Task OnKeyPress(KeyboardEventArgs e)
	{
		if(e.Key == "Enter")
		{
			await js.InvokeVoidAsync("pressButton", "btnEnviar");
		}
	}

}

<script src="/Utilidade.js"></script>