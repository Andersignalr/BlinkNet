@page "/login/{UserName?}"


@using Microsoft.EntityFrameworkCore

@using BlinkNet.Data

@inject IDbContextFactory<MensagemContext> DbFactory

@inject IPersonService PersonService

@inject NavigationManager Navigation
@inject IJSRuntime js

@* <card>
    <p style="color: #123; font-size: 22px;"><b>login</b></p>

    <input type="text" placeholder="Login..." @bind="UserName" />
    <input type="password" placeholder="Password..." @bind="Password" />

    <div style="width: 100%; display:flex; flex-direction: row; justify-content: space-between;">

        <button id="btnLogin" @onclick="BuscaUsuario">Login</button>
        <a @onclick="Register"><button>Register</button></a>
    </div>
</card> *@


<header>
    <h2 class="logo"><ion-icon name="logo-ionitron"></ion-icon></h2>
    <nav class="navigation">
        <a href="/">Chat</a>
        <a href="/login" class="btnLogin-popup">Login</a>
    </nav>
</header>

<div class="wrapper">
    <span class="icon-close"><ion-icon name="close-outline"></ion-icon></span>

    <div class="form-box login">
        <h2>Login</h2>
            <div class="input-box">
                <span class="icon"><ion-icon name="person-circle"></ion-icon></span>
                <input type="text" @bind="UserName" required>
                <label>UserName</label>
            </div>
            <div class="input-box">
                <span class="icon"><ion-icon name="lock-closed"></ion-icon></span>
                <input type="password" @bind="Password" required>
                <label>Password</label>
            </div>
            <div class="remember-forgot">
                <label><input type="checkbox" />Remember-me</label>
                <a>Forgot Password?</a>
            </div>
            <button type="submit" class="btn" @onclick="BuscaUsuario">Login</button>
            <div class="login-register">
                <p>
                    Don't have an account?
                    <a href="/register" class="register-link">Register</a>
                </p>
            </div>
    </div>
</div>


<script src="/js/scriptLogin.js"></script>
<script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

@code {

    [Parameter]
    public string UserName { get; set; } = "";

    public string Password { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task BuscaUsuario()
    {
        if (UserName != "")
        {
            using var context = DbFactory.CreateDbContext();

            if (context is not null && context.People is not null)
            {
                if (context.People is not null)
                {
                    var usuarioExistente = await context.People
                    .Where(p => p.UserName == UserName && p.Password == Password)
                    .FirstOrDefaultAsync();


                    if (usuarioExistente != null)
                    {
                        Console.WriteLine("Existe este usuario");

                        PersonService.SetPerson(usuarioExistente);
                        await PersonService.SetPersonFromLocalStorageAsync();

                        Navigation.NavigateTo($"/");
                        await js.InvokeVoidAsync("location.reload");
                    }

                    else
                    {
                        Console.WriteLine("\n" + "Usuario não existe no banco de dados----------------");
                    }
                }
            }
        }

    }

    private async Task Register()
    {
        await PersonService.ClearPerson();
        // await js.InvokeVoidAsync("location.reload");
        await js.InvokeVoidAsync("window.location.assign", "/register");
    }

}
